local palette = require("gruvbox-material.palette")
local definitions = {}

function definitions.get_definitions(opts)
    local colors = palette.get_palette(opts.background, opts.palette)

    return {
        -- ####### Common: Start
        -- UI: Start
        -- transparent_background = false
        Normal = {fg = colors.fg0, bg = colors.bg0},
        Terminal = {fg = colors.fg0, bg = colors.bg0},
        EndOfBuffer = {fg = colors.bg0, bg = colors.bg0},
        Folded = {fg = colors.grey1, bg = colors.bg2},
        ToolbarLine = {fg = colors.fg1, bg = colors.bg3},
        MsgArea = {link = "Normal"},
        -- sign_coloumn = 'none'
        SignColumn = {fg = colors.fg0, bg = colors.none},
        FoldColumn = {fg = colors.grey0, bg = colors.none},
        --
        IncSearch = {fg = colors.bg0, bg = colors.bg_red},
        Search = {fg = colors.bg0, bg = colors.bg_green},
        ColorColumn = {fg = colors.none, bg = colors.bg2},
        Conceal = {fg = colors.grey0, bg = colors.none},
        -- cursor = 'auto'
        Cursor = {fg = colors.none, bg = colors.none, reverse = true},
        --
        vCursor = {link = "Cursor"},
        iCursor = {link = "Cursor"},
        lCursor = {link = "Cursor"},
        CursorIM = {link = "Cursor"},
        -- diff = false
        CursorLine = {fg = colors.none, bg = colors.bg1},
        CursorColumn = {fg = colors.none, bg = colors.bg1},
        CursorLineNr = {fg = colors.grey2, bg = colors.bg1},
        --
        LineNr = {fg = colors.grey0, bg = colors.none},
        DiffAdd = {fg = colors.none, bg = colors.bg_diff_green},
        DiffChange = {fg = colors.none, bg = colors.bg_diff_blue},
        DiffDelete = {fg = colors.none, bg = colors.bg_diff_red},
        DiffText = {fg = colors.bg0, bg = colors.fg0},
        Directory = {fg = colors.green, bg = colors.none},
        ErrorMsg = {fg = colors.red, bg = colors.none, bold = true, underline = true},
        WarningMsg = {fg = colors.yellow, bg = colors.none, bold = true},
        ModeMsg = {fg = colors.fg0, bg = colors.none, bold = true},
        MoreMsg = {fg = colors.yellow, bg = colors.none, bold = true},
        MatchParen = {fg = colors.none, bg = colors.bg4},
        NonText = {fg = colors.bg5, bg = colors.none},
        Whitespace = {fg = colors.bg5, bg = colors.none},
        SpecialKey = {fg = colors.bg5, bg = colors.none},
        Pmenu = {fg = colors.fg1, bg = colors.bg3},
        PmenuSbar = {fg = colors.none, bg = colors.bg3},
        -- menu_selection_background = 'grey'
        PmenuSel = {fg = colors.bg3, bg = colors.grey2},
        --
        WildMenu = {link = "PmenuSel"},
        PmenuThumb = {fg = colors.none, bg = colors.grey0},
        NormalFloat = {fg = colors.fg1, bg = colors.bg3},
        Question = {fg = colors.yellow, bg = colors.none},
        SpellBad = {fg = colors.red, bg = colors.none, undercurl = true},
        SpellCap = {fg = colors.blue, bg = colors.none, undercurl = true},
        SpellLocal = {fg = colors.aqua, bg = colors.none, undercurl = true},
        SpellRare = {fg = colors.purple, bg = colors.none, undercurl = true},
        -- statusline_style = default
        StatusLine = {fg = colors.fg1, bg = colors.bg_statusline2},
        StatusLineTerm = {fg = colors.fg1, bg = colors.bg_statusline2},
        StatusLineNC = {fg = colors.grey2, bg = colors.bg_statusline2},
        StatusLineTermNC = {fg = colors.grey2, bg = colors.bg_statusline2},
        TabLine = {fg = colors.fg1, bg = colors.bg4},
        TabLineFill = {fg = colors.fg0, bg = colors.bg0},
        TabLineSel = {fg = colors.bg0, bg = colors.grey2},
        --
        VertSplit = {fg = colors.bg5, bg = colors.none},
        -- visual = 'grey background'
        Visual = {fg = colors.none, bg = colors.bg3},
        VisualNOS = {fg = colors.none, bg = colors.bg3},
        --
        QuickFixLine = {fg = colors.purple, bg = colors.none, bold = true},
        Debug = {fg = colors.orange, bg = colors.none},
        debugPC = {fg = colors.bg0, bg = colors.green},
        debugBreakpoint = {fg = colors.bg0, bg = colors.red},
        ToolbarButton = {fg = colors.bg0, bg = colors.grey2},
        -- if nvim
        Substitute = {fg = colors.bg0, bg = colors.yellow},
        LspDiagnosticsFloatingError = {link = "ErrorFloat"},
        LspDiagnosticsFloatingWarning = {link = "WarningFloat"},
        LspDiagnosticsFloatingInformation = {link = "InfoFloat"},
        LspDiagnosticsFloatingHint = {link = "HintFloat"},
        LspDiagnosticsDefaultError = {link = "ErrorText"},
        LspDiagnosticsDefaultWarning = {link = "WarningText"},
        LspDiagnosticsDefaultInformation = {link = "InfoText"},
        LspDiagnosticsDefaultHint = {link = "HintText"},
        LspDiagnosticsVirtualTextError = {link = "Grey"},
        LspDiagnosticsVirtualTextWarning = {link = "Grey"},
        LspDiagnosticsVirtualTextInformation = {link = "Grey"},
        LspDiagnosticsVirtualTextHint = {link = "Grey"},
        LspDiagnosticsUnderlineError = {link = "ErrorText"},
        LspDiagnosticsUnderlineWarning = {link = "WarningText"},
        LspDiagnosticsUnderlineInformation = {link = "InfoText"},
        LspDiagnosticsUnderlineHint = {link = "HintText"},
        LspDiagnosticsSignError = {link = "RedSign"},
        LspDiagnosticsSignWarning = {link = "YellowSign"},
        LspDiagnosticsSignInformation = {link = "BlueSign"},
        LspDiagnosticsSignHint = {link = "AquaSign"},
        LspReferenceText = {link = "CurrentWord"},
        LspReferenceRead = {link = "CurrentWord"},
        LspReferenceWrite = {link = "CurrentWord"},
        TermCursor = {link = "Cursor"},
        healthError = {link = "Red"},
        healthSuccess = {link = "Green"},
        healthWarning = {link = "Yellow"},
        -- UI: End

        -- Syntax: Start
        Boolean = {fg = colors.purple, bg = colors.none},
        Number = {fg = colors.purple, bg = colors.none},
        Float = {fg = colors.purple, bg = colors.none},
        -- italic = false
        PreProc = {fg = colors.purple, bg = colors.none},
        PreCondit = {fg = colors.purple, bg = colors.none},
        Include = {fg = colors.purple, bg = colors.none},
        Define = {fg = colors.purple, bg = colors.none},
        Conditional = {fg = colors.red, bg = colors.none},
        Repeat = {fg = colors.red, bg = colors.none},
        Keyword = {fg = colors.red, bg = colors.none},
        Typedef = {fg = colors.red, bg = colors.none},
        Exception = {fg = colors.red, bg = colors.none},
        Statement = {fg = colors.red, bg = colors.none},
        --
        Error = {fg = colors.red, bg = colors.none},
        StorageClass = {fg = colors.orange, bg = colors.none},
        Tag = {fg = colors.orange, bg = colors.none},
        Label = {fg = colors.orange, bg = colors.none},
        Structure = {fg = colors.orange, bg = colors.none},
        Operator = {fg = colors.orange, bg = colors.none},
        Title = {fg = colors.orange, bg = colors.none, bold = true},
        Special = {fg = colors.yellow, bg = colors.none},
        SpecialChar = {fg = colors.yellow, bg = colors.none},
        Type = {fg = colors.yellow, bg = colors.none},
        -- bold = false
        Function = {fg = colors.green, bg = colors.none},
        --
        String = {fg = colors.green, bg = colors.none},
        Character = {fg = colors.green, bg = colors.none},
        Constant = {fg = colors.aqua, bg = colors.none},
        Macro = {fg = colors.aqua, bg = colors.none},
        Identifier = {fg = colors.blue, bg = colors.none},
        -- italic_comment = true
        Comment = {fg = colors.grey1, bg = colors.none, italic = true},
        SpecialComment = {fg = colors.grey1, bg = colors.none, italic = true},
        Todo = {fg = colors.purple, bg = colors.none, italic = true},
        --
        Delimiter = {fg = colors.fg0, bg = colors.none},
        Ignore = {fg = colors.grey1, bg = colors.none},
        Underlined = {fg = colors.none, bg = colors.none, underline = true},
        -- Syntax: End

        -- Predefined: Start
        Fg = {fg = colors.fg0, bg = colors.none},
        Grey = {fg = colors.grey1, bg = colors.none},
        Red = {fg = colors.red, bg = colors.none},
        Orange = {fg = colors.orange, bg = colors.none},
        Yellow = {fg = colors.yellow, bg = colors.none},
        Green = {fg = colors.green, bg = colors.none},
        Aqua = {fg = colors.aqua, bg = colors.none},
        Blue = {fg = colors.blue, bg = colors.none},
        Purple = {fg = colors.purple, bg = colors.none},
        RedItalic = {fg = colors.red, bg = colors.none, italic = true},
        OrangeItalic = {fg = colors.orange, bg = colors.none, italic = true},
        YellowItalic = {fg = colors.yellow, bg = colors.none, italic = true},
        GreenItalic = {fg = colors.green, bg = colors.none, italic = true},
        AquaItalic = {fg = colors.aqua, bg = colors.none, italic = true},
        BlueItalic = {fg = colors.blue, bg = colors.none, italic = true},
        PurpleItalic = {fg = colors.purple, bg = colors.none, italic = true},
        RedBold = {fg = colors.red, bg = colors.none, bold = true},
        OrangeBold = {fg = colors.orange, bg = colors.none, bold = true},
        YellowBold = {fg = colors.yellow, bg = colors.none, bold = true},
        GreenBold = {fg = colors.green, bg = colors.none, bold = true},
        AquaBold = {fg = colors.aqua, bg = colors.none, bold = true},
        BlueBold = {fg = colors.blue, bg = colors.none, bold = true},
        PurpleBold = {fg = colors.purple, bg = colors.none, bold = true},
        -- sign_coloumn = 'none'
        RedSign = {fg = colors.red, bg = colors.none},
        OrangeSign = {fg = colors.orange, bg = colors.none},
        YellowSign = {fg = colors.yellow, bg = colors.none},
        GreenSign = {fg = colors.green, bg = colors.none},
        AquaSign = {fg = colors.aqua, bg = colors.none},
        BlueSign = {fg = colors.blue, bg = colors.none},
        PurpleSign = {fg = colors.purple, bg = colors.none},
        -- diagnostic_text_highlight = true
        ErrorText = {fg = colors.none, bg = colors.bg_visual_red, underline = true},
        WarningText = {fg = colors.none, bg = colors.bg_visual_yellow, underline = true},
        InfoText = {fg = colors.none, bg = colors.bg_visual_blue, underline = true},
        HintText = {fg = colors.none, bg = colors.bg_visual_green, underline = true},
        -- diagnostic_line_highlight = true
        ErrorLine = {fg = colors.none, bg = colors.bg_visual_red},
        WarningLine = {fg = colors.none, bg = colors.bg_visual_yellow},
        InfoLine = {fg = colors.none, bg = colors.bg_visual_blue},
        HintLine = {fg = colors.none, bg = colors.bg_visual_green},
        --
        ErrorFloat = {fg = colors.red, bg = colors.bg3},
        WarningFloat = {fg = colors.yellow, bg = colors.bg3},
        InfoFloat = {fg = colors.blue, bg = colors.bg3},
        HintFloat = {fg = colors.green, bg = colors.bg3},
        -- diff = false and current_word = 'grey background'
        CurrentWord = {fg = colors.none, bg = colors.bg_current_word},
        -- Predefined: End
        -- ####### Common: End

        -- ####### Terminal: Start
        -- ####### Terminal: End

        -- ####### Plugins: Start
        -- nvim-treesitter/nvim-treesitter
        TSAnnotation = {link = "Purple"},
        TSAttribute = {link = "Purple"},
        TSBoolean = {link = "Purple"},
        TSCharacter = {link = "Yellow"},
        TSComment = {link = "Grey"},
        TSConditional = {link = "Red"},
        TSConstBuiltin = {link = "PurpleItalic"},
        TSConstMacro = {link = "Purple"},
        TSConstant = {link = "PurpleItalic"},
        TSConstructor = {link = "Fg"},
        TSError = {link = "ErrorText"},
        TSException = {link = "Red"},
        TSField = {link = "Green"},
        TSFloat = {link = "Purple"},
        TSFuncBuiltin = {link = "Green"},
        TSFuncMacro = {link = "Green"},
        TSFunction = {link = "Green"},
        TSInclude = {link = "PurpleItalic"},
        TSKeyword = {link = "Red"},
        TSKeywordFunction = {link = "Red"},
        TSLabel = {link = "Orange"},
        TSMethod = {link = "Green"},
        TSNamespace = {link = "BlueItalic"},
        TSNumber = {link = "Purple"},
        TSOperator = {link = "Orange"},
        TSParameter = {link = "Fg"},
        TSParameterReference = {link = "Fg"},
        TSProperty = {link = "Green"},
        TSPunctBracket = {link = "Fg"},
        TSPunctDelimiter = {link = "Grey"},
        TSPunctSpecial = {link = "Fg"},
        TSRepeat = {link = "Red"},
        TSString = {link = "Yellow"},
        TSStringEscape = {link = "Green"},
        TSStringRegex = {link = "Green"},
        TSStructure = {link = "Orange"},
        TSTag = {link = "Orange"},
        TSTagDelimiter = {link = "Green"},
        TSText = {link = "Green"},
        TSEmphasis = {fg = colors.none, bg = colors.none, bold = true},
        TSUnderline = {fg = colors.none, bg = colors.none, underline = true},
        TSType = {link = "Aqua"},
        TSTypeBuiltin = {link = "BlueItalic"},
        TSURI = {link = "markdownUrl"},
        TSVariable = {link = "Fg"},
        TSVariableBuiltin = {link = "PurpleItalic"},
        -- neoclide/coc.nvim
        CocHoverRange = {fg = colors.none, bg = colors.none, bold = true, underline = true},
        CocErrorFloat = {link = "ErrorFloat"},
        CocWarningFloat = {link = "WarningFloat"},
        CocInfoFloat = {link = "InfoFloat"},
        CocHintFloat = {link = "HintFloat"},
        CocErrorHighlight = {link = "ErrorText"},
        CocWarningHighlight = {link = "WarningText"},
        CocInfoHighlight = {link = "InfoText"},
        CocHintHighlight = {link = "HintText"},
        CocHighlightText = {link = "CurrentWord"},
        CocErrorSign = {link = "RedSign"},
        CocWarningSign = {link = "YellowSign"},
        CocInfoSign = {link = "BlueSign"},
        CocHintSign = {link = "AquaSign"},
        CocWarningVirtualText = {link = "Grey"},
        CocErrorVirtualText = {link = "Grey"},
        CocInfoVirtualText = {link = "Grey"},
        CocHintVirtualText = {link = "Grey"},
        CocErrorLine = {link = "ErrorLine"},
        CocWarningLine = {link = "WarningLine"},
        CocInfoLine = {link = "InfoLine"},
        CocHintLine = {link = "HintLine"},
        CocCodeLens = {link = "Grey"},
        HighlightedyankRegion = {link = "Visual"},
        CocGitAddedSign = {link = "GreenSign"},
        CocGitChangeRemovedSign = {link = "PurpleSign"},
        CocGitChangedSign = {link = "BlueSign"},
        CocGitRemovedSign = {link = "RedSign"},
        CocGitTopRemovedSign = {link = "RedSign"},
        CocExplorerBufferRoot = {link = "Orange"},
        CocExplorerBufferExpandIcon = {link = "Aqua"},
        CocExplorerBufferBufnr = {link = "Purple"},
        CocExplorerBufferModified = {link = "Yellow"},
        CocExplorerBufferReadonly = {link = "Red"},
        CocExplorerBufferBufname = {link = "Grey"},
        CocExplorerBufferFullpath = {link = "Grey"},
        CocExplorerFileRoot = {link = "Orange"},
        CocExplorerFileRootName = {link = "Green"},
        CocExplorerFileExpandIcon = {link = "Aqua"},
        CocExplorerFileFullpath = {link = "Grey"},
        CocExplorerFileDirectory = {link = "Green"},
        CocExplorerFileGitStaged = {link = "Purple"},
        CocExplorerFileGitUnstaged = {link = "Yellow"},
        CocExplorerFileGitRootStaged = {link = "Purple"},
        CocExplorerFileGitRootUnstaged = {link = "Yellow"},
        CocExplorerGitPathChange = {link = "Fg"},
        CocExplorerGitContentChange = {link = "Fg"},
        CocExplorerGitRenamed = {link = "Purple"},
        CocExplorerGitCopied = {link = "Fg"},
        CocExplorerGitAdded = {link = "Green"},
        CocExplorerGitUntracked = {link = "Blue"},
        CocExplorerGitUnmodified = {link = "Fg"},
        CocExplorerGitUnmerged = {link = "Orange"},
        CocExplorerGitMixed = {link = "Aqua"},
        CocExplorerGitModified = {link = "Yellow"},
        CocExplorerGitDeleted = {link = "Red"},
        CocExplorerGitIgnored = {link = "Grey"},
        CocExplorerFileSize = {link = "Blue"},
        CocExplorerTimeAccessed = {link = "Aqua"},
        CocExplorerTimeCreated = {link = "Aqua"},
        CocExplorerTimeModified = {link = "Aqua"},
        CocExplorerIndentLine = {link = "Conceal"},
        CocExplorerHelpDescription = {link = "Grey"},
        CocExplorerHelpHint = {link = "Grey"},
        -- nvim-telescope/telescope.nvim
        TelescopeMatching = {link = "OrangeBold"},
        TelescopeBorder = {link = "Grey"},
        TelescopePromptPrefix = {link = "Normal"},
        TelescopeSelection = {link = "Visual"},
        -- airblade/vim-gitgutter
        GitGutterAdd = {link = "GreenSign"},
        GitGutterChange = {link = "BlueSign"},
        GitGutterDelete = {link = "RedSign"},
        GitGutterChangeDelete = {link = "PurpleSign"},
        -- easymotion/vim-easymotion
        EasyMotionTarget = {link = "Search"},
        EasyMotionShade = {link = "Grey"},
        -- preservim/nerdtree
        NERDTreeDir = {link = "Green"},
        NERDTreeDirSlash = {link = "Aqua"},
        NERDTreeOpenable = {link = "Orange"},
        NERDTreeClosable = {link = "Orange"},
        NERDTreeFile = {link = "Fg"},
        NERDTreeExecFile = {link = "Yellow"},
        NERDTreeUp = {link = "Grey"},
        NERDTreeCWD = {link = "Aqua"},
        NERDTreeHelp = {link = "LightGrey"},
        NERDTreeToggleOn = {link = "Green"},
        NERDTreeToggleOff = {link = "Red"},
        NERDTreeFlags = {link = "Orange"},
        NERDTreeLinkFile = {link = "Grey"},
        NERDTreeLinkTarget = {link = "Green"},
        -- mhinz/vim-startify
        StartifyBracket = {link = "Grey"},
        StartifyFile = {link = "Fg"},
        StartifyNumber = {link = "Red"},
        StartifyPath = {link = "Green"},
        StartifySlash = {link = "Green"},
        StartifySection = {link = "Blue"},
        StartifyHeader = {link = "Orange"},
        StartifySpecial = {link = "Grey"},
        StartifyFooter = {link = "Grey"},
        -- phaazon/hop.nvim
        HopNextKey = {reverse = true},
        HopNextKey1 = {reverse = true},
        HopNextKey2 = {reverse = true},
        HopUnmatched = {fg = colors.bg5},
        -- kyazdani42/nvim-tree.lua
        NvimTreeFolderName = {link = "Normal"},
        NvimTreeFolderIcon = {link = "Normal"},
        NvimTreeIndentMarker = {link = "Comment"},
        NvimTreeRootFolder = {fg = colors.grey1, bold = true},
        -- TODO
        -- lewis6991/gitsigns.nvim
        -- hoob3rt/lualine.nvim
        -- ####### Plugins: End

        -- ####### Extended filetype: Start
        -- netrw
        netrwDir = {link = "Green"},
        netrwClassify = {link = "Green"},
        netrwLink = {link = "Grey"},
        netrwSymLink = {link = "Fg"},
        netrwExe = {link = "Yellow"},
        netrwComment = {link = "Grey"},
        netrwList = {link = "Aqua"},
        netrwHelpCmd = {link = "Blue"},
        netrwCmdSep = {link = "Grey"},
        netrwVersion = {link = "Orange"},
        -- markdown
        markdownH1 = {fg = colors.red, bg = colors.none, bold = true},
        markdownH2 = {fg = colors.orange, bg = colors.none, bold = true},
        markdownH3 = {fg = colors.yellow, bg = colors.none, bold = true},
        markdownH4 = {fg = colors.green, bg = colors.none, bold = true},
        markdownH5 = {fg = colors.blue, bg = colors.none, bold = true},
        markdownH6 = {fg = colors.purple, bg = colors.none, bold = true},
        markdownUrl = {fg = colors.blue, bg = colors.none, underline = true},
        markdownItalic = {fg = colors.none, bg = colors.none, italic = true},
        markdownBold = {fg = colors.none, bg = colors.none, bold = true},
        markdownItalicDelimiter = {fg = colors.grey1, bg = colors.none, italic = true},
        markdownCode = {link = "Green"},
        markdownCodeBlock = {link = "Aqua"},
        markdownCodeDelimiter = {link = "Aqua"},
        markdownBlockquote = {link = "Grey"},
        markdownListMarker = {link = "Red"},
        markdownOrderedListMarker = {link = "Red"},
        markdownRule = {link = "Purple"},
        markdownHeadingRule = {link = "Grey"},
        markdownUrlDelimiter = {link = "Grey"},
        markdownLinkDelimiter = {link = "Grey"},
        markdownLinkTextDelimiter = {link = "Grey"},
        markdownHeadingDelimiter = {link = "Grey"},
        markdownLinkText = {link = "Purple"},
        markdownUrlTitleDelimiter = {link = "Green"},
        markdownIdDeclaration = {link = "markdownLinkText"},
        markdownBoldDelimiter = {link = "Grey"},
        markdownId = {link = "Yellow"},
        -- html/markdown/javascriptreact/typescriptreact
        htmlH1 = {fg = colors.red, bg = colors.none, bold = true},
        htmlH2 = {fg = colors.orange, bg = colors.none, bold = true},
        htmlH3 = {fg = colors.yellow, bg = colors.none, bold = true},
        htmlH4 = {fg = colors.green, bg = colors.none, bold = true},
        htmlH5 = {fg = colors.blue, bg = colors.none, bold = true},
        htmlH6 = {fg = colors.purple, bg = colors.none, bold = true},
        htmlLink = {fg = colors.none, bg = colors.none, underline = true},
        htmlBold = {fg = colors.none, bg = colors.none, bold = true},
        htmlBoldUnderline = {fg = colors.none, bg = colors.none, bold = true, underline = true},
        htmlBoldItalic = {fg = colors.none, bg = colors.none, bold = true, italic = true},
        htmlBoldUnderlineItalic = {fg = colors.none, bg = colors.none, bold = true, underline = true, italic = true},
        htmlUnderline = {fg = colors.none, bg = colors.none, underline = true},
        htmlUnderlineItalic = {fg = colors.none, bg = colors.none, underline = true, italic = true},
        htmlItalic = {fg = colors.none, bg = colors.none, italic = true},
        htmlTag = {link = "Green"},
        htmlEndTag = {link = "Blue"},
        htmlTagN = {link = "OrangeItalic"},
        htmlTagName = {link = "OrangeItalic"},
        htmlArg = {link = "Aqua"},
        htmlScriptTag = {link = "Purple"},
        htmlSpecialTagName = {link = "RedItalic"},
        -- xml
        xmlTag = {link = "Green"},
        xmlEndTag = {link = "Blue"},
        xmlTagName = {link = "OrangeItalic"},
        xmlEqual = {link = "Orange"},
        xmlAttrib = {link = "Aqua"},
        xmlEntity = {link = "Red"},
        xmlEntityPunct = {link = "Red"},
        xmlDocTypeDecl = {link = "Grey"},
        xmlDocTypeKeyword = {link = "PurpleItalic"},
        xmlCdataStart = {link = "Grey"},
        xmlCdataCdata = {link = "Purple"},
        -- css/scss/sass/less
        cssAttrComma = {link = "Fg"},
        cssBraces = {link = "Fg"},
        cssTagName = {link = "PurpleItalic"},
        cssClassNameDot = {link = "Red"},
        cssClassName = {link = "RedItalic"},
        cssFunctionName = {link = "Yellow"},
        cssAttr = {link = "Orange"},
        cssProp = {link = "Aqua"},
        cssCommonAttr = {link = "Yellow"},
        cssPseudoClassId = {link = "Blue"},
        cssPseudoClassFn = {link = "Green"},
        cssPseudoClass = {link = "Purple"},
        cssImportant = {link = "RedItalic"},
        cssSelectorOp = {link = "Orange"},
        cssSelectorOp2 = {link = "Orange"},
        cssColor = {link = "Green"},
        cssAttributeSelector = {link = "Aqua"},
        cssUnitDecorators = {link = "Orange"},
        cssValueLength = {link = "Green"},
        cssValueInteger = {link = "Green"},
        cssValueNumber = {link = "Green"},
        cssValueAngle = {link = "Green"},
        cssValueTime = {link = "Green"},
        cssValueFrequency = {link = "Green"},
        cssVendor = {link = "Grey"},
        cssNoise = {link = "Grey"},
        scssMixinName = {link = "Yellow"},
        scssSelectorChar = {link = "Red"},
        scssSelectorName = {link = "RedItalic"},
        scssInterpolationDelimiter = {link = "Green"},
        scssVariableValue = {link = "Green"},
        scssNull = {link = "Purple"},
        scssBoolean = {link = "Purple"},
        scssVariableAssignment = {link = "Grey"},
        scssForKeyword = {link = "PurpleItalic"},
        scssAttribute = {link = "Orange"},
        scssFunctionName = {link = "Yellow"},
        sassProperty = {link = "Aqua"},
        sassAmpersand = {link = "Orange"},
        sassClass = {link = "RedItalic"},
        sassClassChar = {link = "Red"},
        sassMixing = {link = "PurpleItalic"},
        sassMixinName = {link = "Orange"},
        sassCssAttribute = {link = "Yellow"},
        sassInterpolationDelimiter = {link = "Green"},
        sassFunction = {link = "Yellow"},
        sassControl = {link = "RedItalic"},
        sassFor = {link = "RedItalic"},
        sassFunctionName = {link = "GreenBold"},
        -- less
        lessMixinChar = {link = "Grey"},
        lessClass = {link = "RedItalic"},
        lessVariable = {link = "Blue"},
        lessAmpersandChar = {link = "Orange"},
        lessFunction = {link = "Yellow"},
        -- javascript/javascriptreact
        javaScriptNull = {link = "Aqua"},
        javaScriptIdentifier = {link = "Orange"},
        javaScriptParens = {link = "Fg"},
        javaScriptBraces = {link = "Fg"},
        javaScriptGlobal = {link = "Purple"},
        javaScriptMessage = {link = "Yellow"},
        javaScriptFunction = {link = "RedItalic"},
        javaScriptOperator = {link = "Orange"},
        javaScriptMember = {link = "Aqua"},
        -- vim-javascript: https://github.com/pangloss/vim-javascript
        jsThis = {link = "Purple"},
        jsUndefined = {link = "Aqua"},
        jsNull = {link = "Aqua"},
        jsNan = {link = "Aqua"},
        jsSuper = {link = "Purple"},
        jsPrototype = {link = "Purple"},
        jsFunction = {link = "RedItalic"},
        jsGlobalNodeObjects = {link = "PurpleItalic"},
        jsGlobalObjects = {link = "Yellow"},
        jsArrowFunction = {link = "Purple"},
        jsArrowFuncArgs = {link = "Blue"},
        jsFuncArgs = {link = "Blue"},
        jsObjectProp = {link = "Aqua"},
        jsVariableDef = {link = "Blue"},
        jsObjectKey = {link = "Aqua"},
        jsParen = {link = "Blue"},
        jsParenIfElse = {link = "Blue"},
        jsParenRepeat = {link = "Blue"},
        jsParenSwitch = {link = "Blue"},
        jsParenCatch = {link = "Blue"},
        jsBracket = {link = "Blue"},
        jsBlockLabel = {link = "Aqua"},
        jsFunctionKey = {link = "GreenBold"},
        jsClassDefinition = {link = "Yellow"},
        jsDot = {link = "Grey"},
        jsDestructuringBlock = {link = "Blue"},
        jsSpreadExpression = {link = "Purple"},
        jsSpreadOperator = {link = "Green"},
        jsModuleKeyword = {link = "Yellow"},
        jsObjectValue = {link = "Blue"},
        jsTemplateExpression = {link = "Yellow"},
        jsTemplateBraces = {link = "Yellow"},
        jsClassMethodType = {link = "Orange"},
        -- yajs: https://github.com/othree/yajs.vim
        javascriptEndColons = {link = "Fg"},
        javascriptOpSymbol = {link = "Orange"},
        javascriptOpSymbols = {link = "Orange"},
        javascriptIdentifierName = {link = "Blue"},
        javascriptVariable = {link = "Orange"},
        javascriptObjectLabel = {link = "Aqua"},
        javascriptObjectLabelColon = {link = "Grey"},
        javascriptPropertyNameString = {link = "Aqua"},
        javascriptFuncArg = {link = "Blue"},
        javascriptIdentifier = {link = "Purple"},
        javascriptArrowFunc = {link = "Purple"},
        javascriptTemplate = {link = "Yellow"},
        javascriptTemplateSubstitution = {link = "Yellow"},
        javascriptTemplateSB = {link = "Yellow"},
        javascriptNodeGlobal = {link = "PurpleItalic"},
        javascriptDocTags = {link = "PurpleItalic"},
        javascriptDocNotation = {link = "Purple"},
        javascriptClassSuper = {link = "Purple"},
        javascriptClassName = {link = "Yellow"},
        javascriptClassSuperName = {link = "Yellow"},
        javascriptBrackets = {link = "Fg"},
        javascriptBraces = {link = "Fg"},
        javascriptLabel = {link = "Purple"},
        javascriptDotNotation = {link = "Grey"},
        javascriptGlobalArrayDot = {link = "Grey"},
        javascriptGlobalBigIntDot = {link = "Grey"},
        javascriptGlobalDateDot = {link = "Grey"},
        javascriptGlobalJSONDot = {link = "Grey"},
        javascriptGlobalMathDot = {link = "Grey"},
        javascriptGlobalNumberDot = {link = "Grey"},
        javascriptGlobalObjectDot = {link = "Grey"},
        javascriptGlobalPromiseDot = {link = "Grey"},
        javascriptGlobalRegExpDot = {link = "Grey"},
        javascriptGlobalStringDot = {link = "Grey"},
        javascriptGlobalSymbolDot = {link = "Grey"},
        javascriptGlobalURLDot = {link = "Grey"},
        javascriptMethod = {link = "GreenBold"},
        javascriptMethodName = {link = "GreenBold"},
        javascriptObjectMethodName = {link = "GreenBold"},
        javascriptGlobalMethod = {link = "GreenBold"},
        javascriptDOMStorageMethod = {link = "GreenBold"},
        javascriptFileMethod = {link = "GreenBold"},
        javascriptFileReaderMethod = {link = "GreenBold"},
        javascriptFileListMethod = {link = "GreenBold"},
        javascriptBlobMethod = {link = "GreenBold"},
        javascriptURLStaticMethod = {link = "GreenBold"},
        javascriptNumberStaticMethod = {link = "GreenBold"},
        javascriptNumberMethod = {link = "GreenBold"},
        javascriptDOMNodeMethod = {link = "GreenBold"},
        javascriptES6BigIntStaticMethod = {link = "GreenBold"},
        javascriptBOMWindowMethod = {link = "GreenBold"},
        javascriptHeadersMethod = {link = "GreenBold"},
        javascriptRequestMethod = {link = "GreenBold"},
        javascriptResponseMethod = {link = "GreenBold"},
        javascriptES6SetMethod = {link = "GreenBold"},
        javascriptReflectMethod = {link = "GreenBold"},
        javascriptPaymentMethod = {link = "GreenBold"},
        javascriptPaymentResponseMethod = {link = "GreenBold"},
        javascriptTypedArrayStaticMethod = {link = "GreenBold"},
        javascriptGeolocationMethod = {link = "GreenBold"},
        javascriptES6MapMethod = {link = "GreenBold"},
        javascriptServiceWorkerMethod = {link = "GreenBold"},
        javascriptCacheMethod = {link = "GreenBold"},
        javascriptFunctionMethod = {link = "GreenBold"},
        javascriptXHRMethod = {link = "GreenBold"},
        javascriptBOMNavigatorMethod = {link = "GreenBold"},
        javascriptDOMEventTargetMethod = {link = "GreenBold"},
        javascriptDOMEventMethod = {link = "GreenBold"},
        javascriptIntlMethod = {link = "GreenBold"},
        javascriptDOMDocMethod = {link = "GreenBold"},
        javascriptStringStaticMethod = {link = "GreenBold"},
        javascriptStringMethod = {link = "GreenBold"},
        javascriptSymbolStaticMethod = {link = "GreenBold"},
        javascriptRegExpMethod = {link = "GreenBold"},
        javascriptObjectStaticMethod = {link = "GreenBold"},
        javascriptObjectMethod = {link = "GreenBold"},
        javascriptBOMLocationMethod = {link = "GreenBold"},
        javascriptJSONStaticMethod = {link = "GreenBold"},
        javascriptGeneratorMethod = {link = "GreenBold"},
        javascriptEncodingMethod = {link = "GreenBold"},
        javascriptPromiseStaticMethod = {link = "GreenBold"},
        javascriptPromiseMethod = {link = "GreenBold"},
        javascriptBOMHistoryMethod = {link = "GreenBold"},
        javascriptDOMFormMethod = {link = "GreenBold"},
        javascriptClipboardMethod = {link = "GreenBold"},
        javascriptBroadcastMethod = {link = "GreenBold"},
        javascriptDateStaticMethod = {link = "GreenBold"},
        javascriptDateMethod = {link = "GreenBold"},
        javascriptConsoleMethod = {link = "GreenBold"},
        javascriptArrayStaticMethod = {link = "GreenBold"},
        javascriptArrayMethod = {link = "GreenBold"},
        javascriptMathStaticMethod = {link = "GreenBold"},
        javascriptSubtleCryptoMethod = {link = "GreenBold"},
        javascriptCryptoMethod = {link = "GreenBold"},
        javascriptProp = {link = "Aqua"},
        javascriptBOMWindowProp = {link = "Aqua"},
        javascriptDOMStorageProp = {link = "Aqua"},
        javascriptFileReaderProp = {link = "Aqua"},
        javascriptURLUtilsProp = {link = "Aqua"},
        javascriptNumberStaticProp = {link = "Aqua"},
        javascriptDOMNodeProp = {link = "Aqua"},
        javascriptRequestProp = {link = "Aqua"},
        javascriptResponseProp = {link = "Aqua"},
        javascriptES6SetProp = {link = "Aqua"},
        javascriptPaymentProp = {link = "Aqua"},
        javascriptPaymentResponseProp = {link = "Aqua"},
        javascriptPaymentAddressProp = {link = "Aqua"},
        javascriptPaymentShippingOptionProp = {link = "Aqua"},
        javascriptTypedArrayStaticProp = {link = "Aqua"},
        javascriptServiceWorkerProp = {link = "Aqua"},
        javascriptES6MapProp = {link = "Aqua"},
        javascriptRegExpStaticProp = {link = "Aqua"},
        javascriptRegExpProp = {link = "Aqua"},
        javascriptXHRProp = {link = "Aqua"},
        javascriptBOMNavigatorProp = {link = "GreenBold"},
        javascriptDOMEventProp = {link = "Aqua"},
        javascriptBOMNetworkProp = {link = "Aqua"},
        javascriptDOMDocProp = {link = "Aqua"},
        javascriptSymbolStaticProp = {link = "Aqua"},
        javascriptSymbolProp = {link = "Aqua"},
        javascriptBOMLocationProp = {link = "Aqua"},
        javascriptEncodingProp = {link = "Aqua"},
        javascriptCryptoProp = {link = "Aqua"},
        javascriptBOMHistoryProp = {link = "Aqua"},
        javascriptDOMFormProp = {link = "Aqua"},
        javascriptDataViewProp = {link = "Aqua"},
        javascriptBroadcastProp = {link = "Aqua"},
        javascriptMathStaticProp = {link = "Aqua"},
        -- vim-jsx-pretty: https://github.com/maxmellon/vim-jsx-pretty
        jsxTagName = {link = "OrangeItalic"},
        jsxOpenPunct = {link = "Green"},
        jsxClosePunct = {link = "Blue"},
        jsxEscapeJs = {link = "Blue"},
        jsxAttrib = {link = "Aqua"},
        -- typescript/typescriptreact
        -- vim-typescript: https://github.com/leafgarland/typescript-vim
        typescriptSource = {link = "PurpleItalic"},
        typescriptMessage = {link = "Yellow"},
        typescriptGlobalObjects = {link = "Aqua"},
        typescriptInterpolation = {link = "Yellow"},
        typescriptInterpolationDelimiter = {link = "Yellow"},
        typescriptBraces = {link = "Fg"},
        typescriptParens = {link = "Fg"},
        -- yats: https:github.com/HerringtonDarkholme/yats.vim
        typescriptMethodAccessor = {link = "OrangeItalic"},
        typescriptVariable = {link = "Orange"},
        typescriptVariableDeclaration = {link = "Blue"},
        typescriptTypeReference = {link = "Yellow"},
        typescriptEnumKeyword = {link = "RedItalic"},
        typescriptEnum = {link = "Yellow"},
        typescriptIdentifierName = {link = "Aqua"},
        typescriptProp = {link = "Aqua"},
        typescriptCall = {link = "Blue"},
        typescriptInterfaceName = {link = "Yellow"},
        typescriptEndColons = {link = "Fg"},
        typescriptMember = {link = "Aqua"},
        typescriptMemberOptionality = {link = "Orange"},
        typescriptObjectLabel = {link = "Aqua"},
        typescriptArrowFunc = {link = "Purple"},
        typescriptAbstract = {link = "Orange"},
        typescriptObjectColon = {link = "Grey"},
        typescriptTypeAnnotation = {link = "Grey"},
        typescriptAssign = {link = "Orange"},
        typescriptBinaryOp = {link = "Orange"},
        typescriptUnaryOp = {link = "Orange"},
        typescriptFuncComma = {link = "Fg"},
        typescriptClassName = {link = "Yellow"},
        typescriptClassHeritage = {link = "Yellow"},
        typescriptInterfaceHeritage = {link = "Yellow"},
        typescriptIdentifier = {link = "Purple"},
        typescriptGlobal = {link = "Purple"},
        typescriptOperator = {link = "RedItalic"},
        typescriptNodeGlobal = {link = "PurpleItalic"},
        typescriptExport = {link = "PurpleItalic"},
        typescriptDefaultParam = {link = "Orange"},
        typescriptImport = {link = "PurpleItalic"},
        typescriptTypeParameter = {link = "Yellow"},
        typescriptReadonlyModifier = {link = "Orange"},
        typescriptAccessibilityModifier = {link = "Orange"},
        typescriptAmbientDeclaration = {link = "RedItalic"},
        typescriptTemplateSubstitution = {link = "Yellow"},
        typescriptTemplateSB = {link = "Yellow"},
        typescriptExceptions = {link = "RedItalic"},
        typescriptCastKeyword = {link = "RedItalic"},
        typescriptOptionalMark = {link = "Orange"},
        typescriptNull = {link = "Aqua"},
        typescriptMappedIn = {link = "RedItalic"},
        typescriptFuncTypeArrow = {link = "Purple"},
        typescriptTernaryOp = {link = "Orange"},
        typescriptParenExp = {link = "Blue"},
        typescriptIndexExpr = {link = "Blue"},
        typescriptDotNotation = {link = "Grey"},
        typescriptGlobalNumberDot = {link = "Grey"},
        typescriptGlobalStringDot = {link = "Grey"},
        typescriptGlobalArrayDot = {link = "Grey"},
        typescriptGlobalObjectDot = {link = "Grey"},
        typescriptGlobalSymbolDot = {link = "Grey"},
        typescriptGlobalMathDot = {link = "Grey"},
        typescriptGlobalDateDot = {link = "Grey"},
        typescriptGlobalJSONDot = {link = "Grey"},
        typescriptGlobalRegExpDot = {link = "Grey"},
        typescriptGlobalPromiseDot = {link = "Grey"},
        typescriptGlobalURLDot = {link = "Grey"},
        typescriptGlobalMethod = {link = "GreenBold"},
        typescriptDOMStorageMethod = {link = "GreenBold"},
        typescriptFileMethod = {link = "GreenBold"},
        typescriptFileReaderMethod = {link = "GreenBold"},
        typescriptFileListMethod = {link = "GreenBold"},
        typescriptBlobMethod = {link = "GreenBold"},
        typescriptURLStaticMethod = {link = "GreenBold"},
        typescriptNumberStaticMethod = {link = "GreenBold"},
        typescriptNumberMethod = {link = "GreenBold"},
        typescriptDOMNodeMethod = {link = "GreenBold"},
        typescriptPaymentMethod = {link = "GreenBold"},
        typescriptPaymentResponseMethod = {link = "GreenBold"},
        typescriptHeadersMethod = {link = "GreenBold"},
        typescriptRequestMethod = {link = "GreenBold"},
        typescriptResponseMethod = {link = "GreenBold"},
        typescriptES6SetMethod = {link = "GreenBold"},
        typescriptReflectMethod = {link = "GreenBold"},
        typescriptBOMWindowMethod = {link = "GreenBold"},
        typescriptGeolocationMethod = {link = "GreenBold"},
        typescriptServiceWorkerMethod = {link = "GreenBold"},
        typescriptCacheMethod = {link = "GreenBold"},
        typescriptES6MapMethod = {link = "GreenBold"},
        typescriptFunctionMethod = {link = "GreenBold"},
        typescriptRegExpMethod = {link = "GreenBold"},
        typescriptXHRMethod = {link = "GreenBold"},
        typescriptBOMNavigatorMethod = {link = "GreenBold"},
        typescriptIntlMethod = {link = "GreenBold"},
        typescriptDOMEventTargetMethod = {link = "GreenBold"},
        typescriptDOMEventMethod = {link = "GreenBold"},
        typescriptDOMDocMethod = {link = "GreenBold"},
        typescriptStringStaticMethod = {link = "GreenBold"},
        typescriptStringMethod = {link = "GreenBold"},
        typescriptSymbolStaticMethod = {link = "GreenBold"},
        typescriptObjectStaticMethod = {link = "GreenBold"},
        typescriptObjectMethod = {link = "GreenBold"},
        typescriptJSONStaticMethod = {link = "GreenBold"},
        typescriptEncodingMethod = {link = "GreenBold"},
        typescriptBOMLocationMethod = {link = "GreenBold"},
        typescriptPromiseStaticMethod = {link = "GreenBold"},
        typescriptPromiseMethod = {link = "GreenBold"},
        typescriptSubtleCryptoMethod = {link = "GreenBold"},
        typescriptCryptoMethod = {link = "GreenBold"},
        typescriptBOMHistoryMethod = {link = "GreenBold"},
        typescriptDOMFormMethod = {link = "GreenBold"},
        typescriptConsoleMethod = {link = "GreenBold"},
        typescriptDateStaticMethod = {link = "GreenBold"},
        typescriptDateMethod = {link = "GreenBold"},
        typescriptArrayStaticMethod = {link = "GreenBold"},
        typescriptArrayMethod = {link = "GreenBold"},
        typescriptMathStaticMethod = {link = "GreenBold"},
        typescriptStringProperty = {link = "Aqua"},
        typescriptDOMStorageProp = {link = "Aqua"},
        typescriptFileReaderProp = {link = "Aqua"},
        typescriptURLUtilsProp = {link = "Aqua"},
        typescriptNumberStaticProp = {link = "Aqua"},
        typescriptDOMNodeProp = {link = "Aqua"},
        typescriptBOMWindowProp = {link = "Aqua"},
        typescriptRequestProp = {link = "Aqua"},
        typescriptResponseProp = {link = "Aqua"},
        typescriptPaymentProp = {link = "Aqua"},
        typescriptPaymentResponseProp = {link = "Aqua"},
        typescriptPaymentAddressProp = {link = "Aqua"},
        typescriptPaymentShippingOptionProp = {link = "Aqua"},
        typescriptES6SetProp = {link = "Aqua"},
        typescriptServiceWorkerProp = {link = "Aqua"},
        typescriptES6MapProp = {link = "Aqua"},
        typescriptRegExpStaticProp = {link = "Aqua"},
        typescriptRegExpProp = {link = "Aqua"},
        typescriptBOMNavigatorProp = {link = "GreenBold"},
        typescriptXHRProp = {link = "Aqua"},
        typescriptDOMEventProp = {link = "Aqua"},
        typescriptDOMDocProp = {link = "Aqua"},
        typescriptBOMNetworkProp = {link = "Aqua"},
        typescriptSymbolStaticProp = {link = "Aqua"},
        typescriptEncodingProp = {link = "Aqua"},
        typescriptBOMLocationProp = {link = "Aqua"},
        typescriptCryptoProp = {link = "Aqua"},
        typescriptDOMFormProp = {link = "Aqua"},
        typescriptBOMHistoryProp = {link = "Aqua"},
        typescriptMathStaticProp = {link = "Aqua"},
        -- dart
        -- dart-lang: https://github.com/dart-lang/dart-vim-plugin
        dartCoreClasses = {link = "Aqua"},
        dartTypeName = {link = "Aqua"},
        dartInterpolation = {link = "Blue"},
        dartTypeDef = {link = "RedItalic"},
        dartClassDecl = {link = "RedItalic"},
        dartLibrary = {link = "PurpleItalic"},
        dartMetadata = {link = "Blue"},
        -- coffee
        -- vim-coffee-script: https://github.com/kchmck/vim-coffee-script
        coffeeExtendedOp = {link = "Orange"},
        coffeeSpecialOp = {link = "Fg"},
        coffeeDotAccess = {link = "Grey"},
        coffeeCurly = {link = "Fg"},
        coffeeParen = {link = "Fg"},
        coffeeBracket = {link = "Fg"},
        coffeeParens = {link = "Blue"},
        coffeeBrackets = {link = "Blue"},
        coffeeCurlies = {link = "Blue"},
        coffeeOperator = {link = "RedItalic"},
        coffeeStatement = {link = "Orange"},
        coffeeSpecialIdent = {link = "Purple"},
        coffeeObject = {link = "Purple"},
        coffeeObjAssign = {link = "Aqua"},
        -- purescript
        -- purescript-vim: https://github.com/purescript-contrib/purescript-vim
        purescriptModuleKeyword = {link = "PurpleItalic"},
        purescriptModule = {link = "Aqua"},
        purescriptModuleParams = {link = "Blue"},
        purescriptAsKeyword = {link = "OrangeItalic"},
        purescriptHidingKeyword = {link = "OrangeItalic"},
        purescriptWhere = {link = "OrangeItalic"},
        purescriptIdentifier = {link = "Blue"},
        purescriptFunction = {link = "Yellow"},
        purescriptType = {link = "Aqua"},
        -- c/cpp/objc/objcpp
        -- vim-cpp-enhanced-highlight: https://github.com/octol/vim-cpp-enhanced-highlight
        cppSTLnamespace = {link = "Purple"},
        cppSTLtype = {link = "Yellow"},
        cppAccess = {link = "PurpleItalic"},
        cppStructure = {link = "RedItalic"},
        cppSTLios = {link = "Aqua"},
        cppSTLiterator = {link = "PurpleItalic"},
        cppSTLexception = {link = "Purple"},
        -- vim-cpp-modern: https://github.com/bfrg/vim-cpp-modern
        cppSTLVariable = {link = "Aqua"},
        -- chromatica: https://github.com/arakashic/chromatica.nvim
        Member = {link = "Aqua"},
        Variable = {link = "Blue"},
        Namespace = {link = "Purple"},
        EnumConstant = {link = "Aqua"},
        chromaticaException = {link = "RedItalic"},
        chromaticaCast = {link = "Orange"},
        OperatorOverload = {link = "Orange"},
        AccessQual = {link = "Orange"},
        Linkage = {link = "Orange"},
        AutoType = {link = "Yellow"},
        -- vim-lsp-cxx-highlight https://github.com/jackguo380/vim-lsp-cxx-highlight
        LspCxxHlSkippedRegion = {link = "Grey"},
        LspCxxHlSkippedRegionBeginEnd = {link = "PurpleItalic"},
        LspCxxHlGroupEnumConstant = {link = "Aqua"},
        LspCxxHlGroupNamespace = {link = "Purple"},
        LspCxxHlGroupMemberVariable = {link = "Aqua"},
        -- objc
        objcModuleImport = {link = "PurpleItalic"},
        objcException = {link = "RedItalic"},
        objcProtocolList = {link = "Aqua"},
        objcObjDef = {link = "PurpleItalic"},
        objcDirective = {link = "RedItalic"},
        objcPropertyAttribute = {link = "Orange"},
        objcHiddenArgument = {link = "Aqua"},
        -- cs
        -- builtin: https://github.com/nickspoons/vim-cs
        csUnspecifiedStatement = {link = "PurpleItalic"},
        csStorage = {link = "RedItalic"},
        csClass = {link = "RedItalic"},
        csNewType = {link = "Aqua"},
        csContextualStatement = {link = "PurpleItalic"},
        csInterpolationDelimiter = {link = "Yellow"},
        csInterpolation = {link = "Yellow"},
        csEndColon = {link = "Fg"},
        -- python
        pythonBuiltin = {link = "Yellow"},
        pythonExceptions = {link = "Purple"},
        pythonDecoratorName = {link = "Blue"},
        -- python-syntax: https://github.com/vim-python/python-syntax
        pythonExClass = {link = "Purple"},
        pythonBuiltinType = {link = "Yellow"},
        pythonBuiltinObj = {link = "Blue"},
        pythonDottedName = {link = "PurpleItalic"},
        pythonBuiltinFunc = {link = "GreenBold"},
        pythonFunction = {link = "AquaBold"},
        pythonDecorator = {link = "Orange"},
        pythonInclude = {link = "Include"},
        pythonImport = {link = "PreProc"},
        pythonRun = {link = "Blue"},
        pythonCoding = {link = "Grey"},
        pythonOperator = {link = "Orange"},
        pythonConditional = {link = "RedItalic"},
        pythonRepeat = {link = "RedItalic"},
        pythonException = {link = "RedItalic"},
        pythonNone = {link = "Aqua"},
        pythonDot = {link = "Grey"},
        -- semshi: https://github.com/numirias/semshi
        semshiUnresolved = {fg = colors.yellow, bg = colors.none, undercurl = true},
        semshiImported = {link = "Purple"},
        semshiParameter = {link = "Blue"},
        semshiParameterUnused = {link = "Grey"},
        semshiSelf = {link = "PurpleItalic"},
        semshiGlobal = {link = "Yellow"},
        semshiBuiltin = {link = "Yellow"},
        semshiAttribute = {link = "Aqua"},
        semshiLocal = {link = "Red"},
        semshiFree = {link = "Red"},
        semshiSelected = {link = "CurrentWord"},
        semshiErrorSign = {link = "RedSign"},
        semshiErrorChar = {link = "RedSign"},
        -- lua
        luaFunc = {link = "Green"},
        luaFunction = {link = "Aqua"},
        luaTable = {link = "Fg"},
        luaIn = {link = "RedItalic"},
        -- " vim-lua: https://github.com/tbastos/vim-lua {{{
        luaFuncCall = {link = "Green"},
        luaLocal = {link = "Orange"},
        luaSpecialValue = {link = "Green"},
        luaBraces = {link = "Fg"},
        luaBuiltIn = {link = "Purple"},
        luaNoise = {link = "Grey"},
        luaLabel = {link = "Purple"},
        luaFuncTable = {link = "Yellow"},
        luaFuncArgName = {link = "Blue"},
        luaEllipsis = {link = "Orange"},
        luaDocTag = {link = "Green"},
        -- moon
        -- moonscript-vim: https://github.com/leafo/moonscript-vim
        moonInterpDelim = {link = "Yellow"},
        moonInterp = {link = "Blue"},
        moonFunction = {link = "Green"},
        moonLuaFunc = {link = "AquaBold"},
        moonSpecialVar = {link = "Purple"},
        moonObject = {link = "Yellow"},
        moonDotAccess = {link = "Grey"},
        -- java
        javaClassDecl = {link = "RedItalic"},
        javaMethodDecl = {link = "RedItalic"},
        javaVarArg = {link = "Green"},
        javaAnnotation = {link = "Blue"},
        javaUserLabel = {link = "Purple"},
        javaTypedef = {link = "Aqua"},
        javaParen = {link = "Fg"},
        javaParen1 = {link = "Fg"},
        javaParen2 = {link = "Fg"},
        javaParen3 = {link = "Fg"},
        javaParen4 = {link = "Fg"},
        javaParen5 = {link = "Fg"},
        -- kotlin
        -- kotlin-vim: https://github.com/udalov/kotlin-vim
        ktSimpleInterpolation = {link = "Yellow"},
        ktComplexInterpolation = {link = "Yellow"},
        ktComplexInterpolationBrace = {link = "Yellow"},
        ktStructure = {link = "RedItalic"},
        ktKeyword = {link = "Aqua"},
        -- scala
        scalaNameDefinition = {link = "Aqua"},
        scalaInterpolationBoundary = {link = "Yellow"},
        scalaInterpolation = {link = "Blue"},
        scalaTypeOperator = {link = "Orange"},
        scalaOperator = {link = "Orange"},
        scalaKeywordModifier = {link = "Orange"},
        -- go
        goDirective = {link = "PurpleItalic"},
        goConstants = {link = "Aqua"},
        goDeclType = {link = "OrangeItalic"},
        goPackage = {link = "PurpleItalic"},
        goImport = {link = "PurpleItalic"},
        goVarArgs = {link = "Blue"},
        goBuiltins = {link = "GreenBold"},
        goPredefinedIdentifiers = {link = "Aqua"},
        goVar = {link = "Orange"},
        -- rust
        rustStructure = {link = "Orange"},
        rustIdentifier = {link = "Purple"},
        rustModPath = {link = "Orange"},
        rustModPathSep = {link = "Grey"},
        rustSelf = {link = "Blue"},
        rustSuper = {link = "Blue"},
        rustDeriveTrait = {link = "PurpleItalic"},
        rustEnumVariant = {link = "Purple"},
        rustMacroVariable = {link = "Blue"},
        rustAssert = {link = "Aqua"},
        rustPanic = {link = "Aqua"},
        rustPubScopeCrate = {link = "PurpleItalic"},
        -- swift
        -- swift.vim: https://github.com/keith/swift.vim
        swiftInterpolatedWrapper = {link = "Yellow"},
        swiftInterpolatedString = {link = "Blue"},
        swiftProperty = {link = "Aqua"},
        swiftTypeDeclaration = {link = "Orange"},
        swiftClosureArgument = {link = "Purple"},
        -- php
        phpVarSelector = {link = "Blue"},
        phpDefine = {link = "OrangeItalic"},
        phpStructure = {link = "RedItalic"},
        phpSpecialFunction = {link = "GreenBold"},
        phpInterpSimpleCurly = {link = "Yellow"},
        phpComparison = {link = "Orange"},
        phpMethodsVar = {link = "Aqua"},
        phpMemberSelector = {link = "Green"},
        -- php.vim: https://github.com/StanAngeloff/php.vim
        phpParent = {link = "Fg"},
        phpNowDoc = {link = "Green"},
        phpFunction = {link = "GreenBold"},
        phpMethod = {link = "GreenBold"},
        phpClass = {link = "Orange"},
        phpSuperglobals = {link = "Purple"},
        -- ruby
        rubyKeywordAsMethod = {link = "GreenBold"},
        rubyInterpolation = {link = "Yellow"},
        rubyInterpolationDelimiter = {link = "Yellow"},
        rubyStringDelimiter = {link = "Green"},
        rubyBlockParameterList = {link = "Blue"},
        rubyDefine = {link = "RedItalic"},
        rubyModuleName = {link = "Purple"},
        rubyAccess = {link = "Orange"},
        rubyAttribute = {link = "Yellow"},
        rubyMacro = {link = "RedItalic"},
        -- haskell
        -- haskell-vim: https://github.com/neovimhaskell/haskell-vim
        haskellBrackets = {link = "Blue"},
        haskellIdentifier = {link = "Yellow"},
        haskellAssocType = {link = "Aqua"},
        haskellQuotedType = {link = "Aqua"},
        haskellType = {link = "Aqua"},
        haskellDeclKeyword = {link = "RedItalic"},
        haskellWhere = {link = "RedItalic"},
        haskellDeriving = {link = "PurpleItalic"},
        haskellForeignKeywords = {link = "PurpleItalic"},
        -- perl
        perlStatementPackage = {link = "PurpleItalic"},
        perlStatementInclude = {link = "PurpleItalic"},
        perlStatementStorage = {link = "Orange"},
        perlStatementList = {link = "Orange"},
        perlMatchStartEnd = {link = "Orange"},
        perlVarSimpleMemberName = {link = "Aqua"},
        perlVarSimpleMember = {link = "Fg"},
        perlMethod = {link = "GreenBold"},
        podVerbatimLine = {link = "Green"},
        podCmdText = {link = "Yellow"},
        -- ocaml
        ocamlArrow = {link = "Orange"},
        ocamlEqual = {link = "Orange"},
        ocamlOperator = {link = "Orange"},
        ocamlKeyChar = {link = "Orange"},
        ocamlModPath = {link = "Green"},
        ocamlFullMod = {link = "Green"},
        ocamlModule = {link = "Purple"},
        ocamlConstructor = {link = "Aqua"},
        ocamlFuncWith = {link = "Yellow"},
        ocamlWith = {link = "Yellow"},
        ocamlModParam = {link = "Fg"},
        ocamlModParam1 = {link = "Fg"},
        ocamlAnyVar = {link = "Blue"},
        ocamlPpxEncl = {link = "Orange"},
        ocamlPpxIdentifier = {link = "Blue"},
        ocamlSigEncl = {link = "Orange"},
        ocamlStructEncl = {link = "Aqua"},
        -- ocamlModParam1 = {link = 'Blue'},
        -- erlang
        erlangAtom = {link = "Aqua"},
        erlangLocalFuncRef = {link = "GreenBold"},
        erlangLocalFuncCall = {link = "GreenBold"},
        erlangGlobalFuncRef = {link = "GreenBold"},
        erlangGlobalFuncCall = {link = "GreenBold"},
        erlangAttribute = {link = "PurpleItalic"},
        erlangPipe = {link = "Orange"},
        -- elixir
        -- vim-elixir: https://github.com/elixir-editors/vim-elixir
        elixirStringDelimiter = {link = "Green"},
        elixirKeyword = {link = "Orange"},
        elixirInterpolation = {link = "Yellow"},
        elixirInterpolationDelimiter = {link = "Yellow"},
        elixirSelf = {link = "Purple"},
        elixirPseudoVariable = {link = "Purple"},
        elixirModuleDefine = {link = "PurpleItalic"},
        elixirBlockDefinition = {link = "RedItalic"},
        elixirDefine = {link = "RedItalic"},
        elixirPrivateDefine = {link = "RedItalic"},
        elixirGuard = {link = "RedItalic"},
        elixirPrivateGuard = {link = "RedItalic"},
        elixirProtocolDefine = {link = "RedItalic"},
        elixirImplDefine = {link = "RedItalic"},
        elixirRecordDefine = {link = "RedItalic"},
        elixirPrivateRecordDefine = {link = "RedItalic"},
        elixirMacroDefine = {link = "RedItalic"},
        elixirPrivateMacroDefine = {link = "RedItalic"},
        elixirDelegateDefine = {link = "RedItalic"},
        elixirOverridableDefine = {link = "RedItalic"},
        elixirExceptionDefine = {link = "RedItalic"},
        elixirCallbackDefine = {link = "RedItalic"},
        elixirStructDefine = {link = "RedItalic"},
        elixirExUnitMacro = {link = "RedItalic"},
        -- lisp
        lispAtomMark = {link = "Green"},
        lispKey = {link = "Aqua"},
        lispFunc = {link = "OrangeItalic"},
        -- closure
        clojureMacro = {link = "PurpleItalic"},
        clojureFunc = {link = "AquaBold"},
        clojureConstant = {link = "Yellow"},
        clojureSpecial = {link = "RedItalic"},
        clojureDefine = {link = "RedItalic"},
        clojureKeyword = {link = "Orange"},
        clojureVariable = {link = "Blue"},
        clojureMeta = {link = "Yellow"},
        clojureDeref = {link = "Yellow"},
        -- matlab
        matlabSemicolon = {link = "Fg"},
        matlabFunction = {link = "RedItalic"},
        matlabImplicit = {link = "GreenBold"},
        matlabDelimiter = {link = "Fg"},
        matlabOperator = {link = "GreenBold"},
        matlabArithmeticOperator = {link = "Orange"},
        matlabRelationalOperator = {link = "Orange"},
        matlabLogicalOperator = {link = "Orange"},
        -- sh/zsh
        shRange = {link = "Fg"},
        shTestOpr = {link = "Orange"},
        shOption = {link = "Aqua"},
        bashStatement = {link = "Orange"},
        shOperator = {link = "Orange"},
        shQuote = {link = "Green"},
        shSet = {link = "Orange"},
        shSetList = {link = "Blue"},
        shSnglCase = {link = "Orange"},
        shVariable = {link = "Blue"},
        shVarAssign = {link = "Orange"},
        shCmdSubRegion = {link = "Green"},
        shCommandSub = {link = "Orange"},
        shFunctionOne = {link = "GreenBold"},
        shFunctionKey = {link = "RedItalic"},
        zshOptStart = {link = "PurpleItalic"},
        zshOption = {link = "Blue"},
        zshSubst = {link = "Yellow"},
        zshFunction = {link = "GreenBold"},
        zshDeref = {link = "Blue"},
        zshTypes = {link = "Orange"},
        zshVariableDef = {link = "Blue"},
        -- fish
        fishStatement = {link = "Orange"},
        fishLabel = {link = "RedItalic"},
        fishCommandSub = {link = "Yellow"},
        -- ps1
        ps1FunctionInvocation = {link = "AquaBold"},
        ps1FunctionDeclaration = {link = "AquaBold"},
        ps1InterpolationDelimiter = {link = "Yellow"},
        ps1BuiltIn = {link = "Yellow"},
        -- vim
        vimCommentTitle = {fg = colors.grey1, bg = colors.none, bold = true},
        vimLet = {link = "Orange"},
        vimFunction = {link = "GreenBold"},
        vimIsCommand = {link = "Fg"},
        vimUserFunc = {link = "GreenBold"},
        vimFuncName = {link = "GreenBold"},
        vimMap = {link = "PurpleItalic"},
        vimNotation = {link = "Aqua"},
        vimMapLhs = {link = "Green"},
        vimMapRhs = {link = "Green"},
        vimSetEqual = {link = "Yellow"},
        vimSetSep = {link = "Fg"},
        vimOption = {link = "Aqua"},
        vimUserAttrbKey = {link = "Yellow"},
        vimUserAttrb = {link = "Green"},
        vimAutoCmdSfxList = {link = "Aqua"},
        vimSynType = {link = "Orange"},
        vimHiBang = {link = "Orange"},
        vimSet = {link = "Yellow"},
        -- vimSetSep = {link = 'Grey'},
        vimContinue = {link = "Grey"},
        -- make
        makeIdent = {link = "Aqua"},
        makeSpecTarget = {link = "Yellow"},
        makeTarget = {link = "Blue"},
        makeCommands = {link = "Orange"},
        -- cmake
        cmakeCommand = {link = "Orange"},
        cmakeKWconfigure_package_config_file = {link = "Yellow"},
        cmakeKWwrite_basic_package_version_file = {link = "Yellow"},
        cmakeKWExternalProject = {link = "Aqua"},
        cmakeKWadd_compile_definitions = {link = "Aqua"},
        cmakeKWadd_compile_options = {link = "Aqua"},
        cmakeKWadd_custom_command = {link = "Aqua"},
        cmakeKWadd_custom_target = {link = "Aqua"},
        cmakeKWadd_definitions = {link = "Aqua"},
        cmakeKWadd_dependencies = {link = "Aqua"},
        cmakeKWadd_executable = {link = "Aqua"},
        cmakeKWadd_library = {link = "Aqua"},
        cmakeKWadd_link_options = {link = "Aqua"},
        cmakeKWadd_subdirectory = {link = "Aqua"},
        cmakeKWadd_test = {link = "Aqua"},
        cmakeKWbuild_command = {link = "Aqua"},
        cmakeKWcmake_host_system_information = {link = "Aqua"},
        cmakeKWcmake_minimum_required = {link = "Aqua"},
        cmakeKWcmake_parse_arguments = {link = "Aqua"},
        cmakeKWcmake_policy = {link = "Aqua"},
        cmakeKWconfigure_file = {link = "Aqua"},
        cmakeKWcreate_test_sourcelist = {link = "Aqua"},
        cmakeKWctest_build = {link = "Aqua"},
        cmakeKWctest_configure = {link = "Aqua"},
        cmakeKWctest_coverage = {link = "Aqua"},
        cmakeKWctest_memcheck = {link = "Aqua"},
        cmakeKWctest_run_script = {link = "Aqua"},
        cmakeKWctest_start = {link = "Aqua"},
        cmakeKWctest_submit = {link = "Aqua"},
        cmakeKWctest_test = {link = "Aqua"},
        cmakeKWctest_update = {link = "Aqua"},
        cmakeKWctest_upload = {link = "Aqua"},
        cmakeKWdefine_property = {link = "Aqua"},
        cmakeKWdoxygen_add_docs = {link = "Aqua"},
        cmakeKWenable_language = {link = "Aqua"},
        cmakeKWenable_testing = {link = "Aqua"},
        cmakeKWexec_program = {link = "Aqua"},
        cmakeKWexecute_process = {link = "Aqua"},
        cmakeKWexport = {link = "Aqua"},
        cmakeKWexport_library_dependencies = {link = "Aqua"},
        cmakeKWfile = {link = "Aqua"},
        cmakeKWfind_file = {link = "Aqua"},
        cmakeKWfind_library = {link = "Aqua"},
        cmakeKWfind_package = {link = "Aqua"},
        cmakeKWfind_path = {link = "Aqua"},
        cmakeKWfind_program = {link = "Aqua"},
        cmakeKWfltk_wrap_ui = {link = "Aqua"},
        cmakeKWforeach = {link = "Aqua"},
        cmakeKWfunction = {link = "Aqua"},
        cmakeKWget_cmake_property = {link = "Aqua"},
        cmakeKWget_directory_property = {link = "Aqua"},
        cmakeKWget_filename_component = {link = "Aqua"},
        cmakeKWget_property = {link = "Aqua"},
        cmakeKWget_source_file_property = {link = "Aqua"},
        cmakeKWget_target_property = {link = "Aqua"},
        cmakeKWget_test_property = {link = "Aqua"},
        cmakeKWif = {link = "Aqua"},
        cmakeKWinclude = {link = "Aqua"},
        cmakeKWinclude_directories = {link = "Aqua"},
        cmakeKWinclude_external_msproject = {link = "Aqua"},
        cmakeKWinclude_guard = {link = "Aqua"},
        cmakeKWinstall = {link = "Aqua"},
        cmakeKWinstall_files = {link = "Aqua"},
        cmakeKWinstall_programs = {link = "Aqua"},
        cmakeKWinstall_targets = {link = "Aqua"},
        cmakeKWlink_directories = {link = "Aqua"},
        cmakeKWlist = {link = "Aqua"},
        cmakeKWload_cache = {link = "Aqua"},
        cmakeKWload_command = {link = "Aqua"},
        cmakeKWmacro = {link = "Aqua"},
        cmakeKWmark_as_advanced = {link = "Aqua"},
        cmakeKWmath = {link = "Aqua"},
        cmakeKWmessage = {link = "Aqua"},
        cmakeKWoption = {link = "Aqua"},
        cmakeKWproject = {link = "Aqua"},
        cmakeKWqt_wrap_cpp = {link = "Aqua"},
        cmakeKWqt_wrap_ui = {link = "Aqua"},
        cmakeKWremove = {link = "Aqua"},
        cmakeKWseparate_arguments = {link = "Aqua"},
        cmakeKWset = {link = "Aqua"},
        cmakeKWset_directory_properties = {link = "Aqua"},
        cmakeKWset_property = {link = "Aqua"},
        cmakeKWset_source_files_properties = {link = "Aqua"},
        cmakeKWset_target_properties = {link = "Aqua"},
        cmakeKWset_tests_properties = {link = "Aqua"},
        cmakeKWsource_group = {link = "Aqua"},
        cmakeKWstring = {link = "Aqua"},
        cmakeKWsubdirs = {link = "Aqua"},
        cmakeKWtarget_compile_definitions = {link = "Aqua"},
        cmakeKWtarget_compile_features = {link = "Aqua"},
        cmakeKWtarget_compile_options = {link = "Aqua"},
        cmakeKWtarget_include_directories = {link = "Aqua"},
        cmakeKWtarget_link_directories = {link = "Aqua"},
        cmakeKWtarget_link_libraries = {link = "Aqua"},
        cmakeKWtarget_link_options = {link = "Aqua"},
        cmakeKWtarget_precompile_headers = {link = "Aqua"},
        cmakeKWtarget_sources = {link = "Aqua"},
        cmakeKWtry_compile = {link = "Aqua"},
        cmakeKWtry_run = {link = "Aqua"},
        cmakeKWunset = {link = "Aqua"},
        cmakeKWuse_mangled_mesa = {link = "Aqua"},
        cmakeKWvariable_requires = {link = "Aqua"},
        cmakeKWvariable_watch = {link = "Aqua"},
        cmakeKWwrite_file = {link = "Aqua"},
        -- json
        jsonKeyword = {link = "Orange"},
        jsonQuote = {link = "Grey"},
        jsonBraces = {link = "Fg"},
        -- yaml
        yamlKey = {link = "Orange"},
        yamlConstant = {link = "Purple"},
        -- toml
        tomlTable = {fg = colors.purple, bg = colors.none, bold = true},
        tomlKey = {link = "Orange"},
        tomlBoolean = {link = "Aqua"},
        tomlTableArray = {link = "tomlTable"},
        -- gicommit
        gitcommitSummary = {link = "Red"},
        gitcommitUntracked = {link = "Grey"},
        gitcommitDiscarded = {link = "Grey"},
        gitcommitSelected = {link = "Grey"},
        gitcommitUnmerged = {link = "Grey"},
        gitcommitOnBranch = {link = "Grey"},
        gitcommitArrow = {link = "Grey"},
        gitcommitFile = {link = "Green"},
        -- dosini
        dosiniHeader = {fg = colors.red, bg = colors.none, bold = true},
        dosiniLabel = {link = "Yellow"},
        dosiniValue = {link = "Green"},
        dosiniNumber = {link = "Green"},
        -- help
        helpNote = {fg = colors.purple, bg = colors.none, bold = true},
        helpHeadline = {fg = colors.red, bg = colors.none, bold = true},
        helpHeader = {fg = colors.orange, bg = colors.none, bold = true},
        helpURL = {fg = colors.green, bg = colors.none, underline = true},
        helpHyperTextEntry = {fg = colors.yellow, bg = colors.none, bold = true},
        helpHyperTextJump = {link = "Yellow"},
        helpCommand = {link = "Aqua"},
        helpExample = {link = "Green"},
        helpSpecial = {link = "Blue"},
        helpSectionDelim = {link = "Grey"}
        -- ####### Extended: End
    }
end

return definitions
